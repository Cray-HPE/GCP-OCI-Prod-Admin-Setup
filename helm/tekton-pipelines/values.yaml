pipelineDeployment:
  image:
    repository: "gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/controller"
    digest: "sha256:077cdb806e2e4f2d787066fa426e3f5c57371b5552f777e323b56c68c00f9af0"
    tag: "v0.32.1"
  replicas: 1
  args:
    - kubeconfigWriterImage:
      name: "kubeconfig-writer-image"
      image: "gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/kubeconfigwriter:v0.32.1@sha256:fc663b53693f55592e9639f1b65132cce002f1b50329389524740c32cc314bc3"
    - gitImage:
      name: "git-image"
      image: "gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init:v0.32.1@sha256:02ffc8b09e575d1ee8cfcc5a82263cea56f3f5fe04ea1082bb06d98b5b83d5e4"
    - entrypointImage:
      name: "entrypoint-image"
      image: "gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/entrypoint:v0.32.1@sha256:adf4bebbb80953561764a3fd65a83dc060387aadbde02e175aecf5e857b4fde7"
    - nopImage:
      name: "nop-image"
      image: "gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/nop:v0.32.1@sha256:ca21b9d74c05eb94a4059468e0eb794f3b6b8c4f0cf6b1cb6916251adda47ec2"
    - imagedigestExporterImage:
      name: "imagedigest-exporter-image"
      image: "gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/imagedigestexporter:v0.32.1@sha256:3c4918e581ba5b67db9838ee384012e419eda8fdcd716447d588c33c7073d07b"
    - prImage:
      name: "pr-image"
      image: "gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/pullrequest-init:v0.32.1@sha256:62c11e60e8d4653a4eab9118e6f761fa7efe3a69e829f8c68d6ebbeb16aaf336"
    - gsutilImage:
      name: "gsutil-image"
      image: "gcr.io/google.com/cloudsdktool/cloud-sdk@sha256:27b2c22bf259d9bc1a291e99c63791ba0c27a04d2db0a43241ba0f1f20f4067f"
    - shellImage:
      name: "shell-image"
      image: "gcr.io/distroless/base@sha256:cfdc553400d41b47fd231b028403469811fcdbc0e69d66ea8030c5a0b5fbac2b"
    - shell_image_win:
      name: "shell-image-win"
      image: "mcr.microsoft.com/powershell:nanoserver@sha256:b6d5ff841b78bdf2dfed7550000fd4f3437385b8fa686ec0f010be24777654d6"

# pipeline webhook
webhook:
  replicas: 1
  image:
    repository: "gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/webhook"
    digest: "sha256:3e9beebdc80184231a9e147b20b9e8f15e7445af9b0e05dc6f05ce396c1f8500"
    tag: "v0.32.1"
  resources:
    requests:
      cpu: 100m
      memory: 100Mi
    limits:
      cpu: 500m
      memory: 500Mi
  ports:
    - name: metrics
      containerPort: 9090
    - name: profiling
      containerPort: 8008
    - name: https-webhook
      containerPort: 8443
    - name: probes
      containerPort: 8080
  probes:
    livenessProbe:
      httpGet:
        path: /health
        port: probes
        scheme: HTTP
      initialDelaySeconds: 5
      periodSeconds: 10
      timeoutSeconds: 5
    readinessProbe:
      httpGet:
        path: /readiness
        port: probes
        scheme: HTTP
      initialDelaySeconds: 5
      periodSeconds: 10
      timeoutSeconds: 5

# webhook autoscaler
webhookAutoscaler:
  minReplicas: 1
  maxReplicas: 5

# controller service
controllerService:
  ports:
    - name: http-metrics
      port: 9090
      protocol: TCP
      targetPort: 9090
    - name: http-profiling
      port: 8008
      targetPort: 8008
    - name: probes
      port: 8080

# webhook service
webhookService:
  ports:
    # Define metrics and profiling for them to be accessible within service meshes.
    - name: http-metrics
      port: 9090
      targetPort: 9090
    - name: http-profiling
      port: 8008
      targetPort: 8008
    - name: https-webhook
      port: 443
      targetPort: 8443
    - name: probes
      port: 8080
# Config Map for config-artifact-bucket
# https://github.com/tektoncd/pipeline/blob/main/docs/install.md#configuring-a-cloud-storage-bucket
# data:
#  # location of the gcs bucket to be used for artifact storage
#  location: "gs://bucket-name"
#  # name of the secret that will contain the credentials for the service account
#  # with access to the bucket
#  bucket.service.account.secret.name:
#  # The key in the secret with the required service account json
#  bucket.service.account.secret.key:
#  # The field name that should be used for the service account
#  # Valid values: GOOGLE_APPLICATION_CREDENTIALS, BOTO_CONFIG.
#  bucket.service.account.field.name: GOOGLE_APPLICATION_CREDENTIALS
configArtifactBucket:

# Config Map for config-artifact-bucket
# data:
#   # size of the PVC volume
#   size: 5Gi
#
#   # storage class of the PVC volume
#   storageClassName: storage-class-name
configArtifactPvc:

configDefaults:
  _example: |
  ################################
  #                              #
  #    EXAMPLE CONFIGURATION     #
  #                              #
  ################################

  # This block is not actually functional configuration,
  # but serves to illustrate the available configuration
  # options and document them in a way that is accessible
  # to users that `kubectl edit` this config map.
  #
  # These sample configuration options may be copied out of
  # this example block and unindented to be in the data block
  # to actually change the configuration.

  # default-timeout-minutes contains the default number of
  # minutes to use for TaskRun and PipelineRun, if none is specified.
  default-timeout-minutes: "60"  # 60 minutes

  # default-service-account contains the default service account name
  # to use for TaskRun and PipelineRun, if none is specified.
  default-service-account: "default"

  # default-managed-by-label-value contains the default value given to the
  # "app.kubernetes.io/managed-by" label applied to all Pods created for
  # TaskRuns. If a user's requested TaskRun specifies another value for this
  # label, the user's request supercedes.
  default-managed-by-label-value: "tekton-pipelines"

  # default-pod-template contains the default pod template to use
  # TaskRun and PipelineRun, if none is specified. If a pod template
  # is specified, the default pod template is ignored.
  # default-pod-template:

  # default-cloud-events-sink contains the default CloudEvents sink to be
  # used for TaskRun and PipelineRun, when no sink is specified.
  # Note that right now it is still not possible to set a PipelineRun or
  # TaskRun specific sink, so the default is the only option available.
  # If no sink is specified, no CloudEvent is generated
  # default-cloud-events-sink:

  # default-task-run-workspace-binding contains the default workspace
  # configuration provided for any Workspaces that a Task declares
  # but that a TaskRun does not explicitly provide.
  # default-task-run-workspace-binding: |
  #   emptyDir: {}

configLeaderElection:
  # An inactive but valid configuration follows; see example.
  leaseDuration: "15s"
  renewDeadline: "10s"
  retryPeriod: "2s"

configLogging:
  # Common configuration for all knative codebase
  zap-logger-config: |
    {
      "level": "info",
      "development": false,
      "sampling": {
        "initial": 100,
        "thereafter": 100
      },
      "outputPaths": ["stdout"],
      "errorOutputPaths": ["stderr"],
      "encoding": "json",
      "encoderConfig": {
        "timeKey": "ts",
        "levelKey": "level",
        "nameKey": "logger",
        "callerKey": "caller",
        "messageKey": "msg",
        "stacktraceKey": "stacktrace",
        "lineEnding": "",
        "levelEncoder": "",
        "timeEncoder": "iso8601",
        "durationEncoder": "",
        "callerEncoder": ""
      }
    }
  # Log level overrides
  loglevel.controller: "info"
  loglevel.webhook: "info"

configObservability:
  _example: |
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################

    # This block is not actually functional configuration,
    # but serves to illustrate the available configuration
    # options and document them in a way that is accessible
    # to users that `kubectl edit` this config map.
    #
    # These sample configuration options may be copied out of
    # this example block and unindented to be in the data block
    # to actually change the configuration.

    # metrics.backend-destination field specifies the system metrics destination.
    # It supports either prometheus (the default) or stackdriver.
    # Note: Using Stackdriver will incur additional charges.
    metrics.backend-destination: prometheus

    # metrics.stackdriver-project-id field specifies the Stackdriver project ID. This
    # field is optional. When running on GCE, application default credentials will be
    # used and metrics will be sent to the cluster's project if this field is
    # not provided.
    metrics.stackdriver-project-id: "<your stackdriver project id>"

    # metrics.allow-stackdriver-custom-metrics indicates whether it is allowed
    # to send metrics to Stackdriver using "global" resource type and custom
    # metric type. Setting this flag to "true" could cause extra Stackdriver
    # charge.  If metrics.backend-destination is not Stackdriver, this is
    # ignored.
    metrics.allow-stackdriver-custom-metrics: "false"
    metrics.taskrun.level: "taskrun"
    metrics.taskrun.duration-type: "histogram"
    metrics.pipelinerun.level: "pipelinerun"
    metrics.pipelinerun.duration-type: "histogram"

configRegistryCert:
#  # Registry's self-signed certificate
#  cert: |

featureFlags:
  # Setting this flag to "true" will prevent Tekton to create an
  # Affinity Assistant for every TaskRun sharing a PVC workspace
  #
  # The default behaviour is for Tekton to create Affinity Assistants
  #
  # See more in the workspace documentation about Affinity Assistant
  # https://github.com/tektoncd/pipeline/blob/main/docs/workspaces.md#affinity-assistant-and-specifying-workspace-order-in-a-pipeline
  # or https://github.com/tektoncd/pipeline/pull/2630 for more info.
  disable-affinity-assistant: "false"
  # Setting this flag to "false" will allow Tekton to override your
  # Task container's $HOME environment variable.
  #
  # See https://github.com/tektoncd/pipeline/issues/2013 for more
  # info.
  disable-home-env-overwrite: "true"
  # Setting this flag to "false" will allow Tekton to override your
  # Task container's working directory.
  #
  # See https://github.com/tektoncd/pipeline/issues/1836 for more
  # info.
  disable-working-directory-overwrite: "true"
  # Setting this flag to "true" will prevent Tekton scanning attached
  # service accounts and injecting any credentials it finds into your
  # Steps.
  #
  # The default behaviour currently is for Tekton to search service
  # accounts for secrets matching a specified format and automatically
  # mount those into your Steps.
  #
  # Note: setting this to "true" will prevent PipelineResources from
  # working.
  #
  # See https://github.com/tektoncd/pipeline/issues/2791 for more
  # info.
  disable-creds-init: "false"
  # This option should be set to false when Pipelines is running in a
  # cluster that does not use injected sidecars such as Istio. Setting
  # it to false should decrease the time it takes for a TaskRun to start
  # running. For clusters that use injected sidecars, setting this
  # option to false can lead to unexpected behavior.
  #
  # See https://github.com/tektoncd/pipeline/issues/2080 for more info.
  running-in-environment-with-injected-sidecars: "true"
  # Setting this flag to "true" will require that any Git SSH Secret
  # offered to Tekton must have known_hosts included.
  #
  # See https://github.com/tektoncd/pipeline/issues/2981 for more
  # info.
  require-git-ssh-secret-known-hosts: "false"
  # Setting this flag to "true" enables the use of Tekton OCI bundle.
  # This is an experimental feature and thus should still be considered
  # an alpha feature.
  enable-tekton-oci-bundles: "false"
  # Setting this flag to "true" enables the use of custom tasks from
  # within pipelines.
  # This is an experimental feature and thus should still be considered
  # an alpha feature.
  enable-custom-tasks: "false"
  # Setting this flag will determine which gated features are enabled.
  # Acceptable values are "stable" or "alpha".
  enable-api-fields: "stable"
  # Setting this flag to "true" scopes when expressions to guard a Task only
  # instead of a Task and its dependent Tasks.
  scope-when-expressions-to-task: "false"

pipelinesInfo:
  # Contains pipelines version which can be queried by external
  # tools such as CLI. Elevated permissions are already given to
  # this ConfigMap such that even if we don't have access to
  # other resources in the namespace we still can have access to
  # this ConfigMap.
  version: "v0.32.1"
