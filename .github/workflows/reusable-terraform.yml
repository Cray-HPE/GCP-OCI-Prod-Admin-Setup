#
# MIT License
#
# (C) Copyright 2022 Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
#
name: Terraform Workflow

on:
  workflow_call:
    secrets:
      HPE_TEKTON_DEPLOY:
        description: 'A token to pull hpe tekton helm charts'
        required: false
    inputs:
      terraform_mode:
        required: false
        type: string
        default: 'plan'
        description: 'Mode to run terraform in.'
      checkout_submodules:
        required: false
        type: string
        default: 'recursive'
        description: 'Whether to checkout submodules: `true` to checkout submodules or `recursive` to recursively checkout submodules.'
      project_id:
        required: true
        type: string
        description: 'GCP project ID.'
      workload_identity_provider:
        required: true
        type: string
        description: 'Workload identity provider string for OIDC auth.'
      service_account:
        required: true
        type: string
        description: 'GCP service account to work with Workload identity provider.'
      terraform_dir:
        required: true
        type: string
        description: 'Terraform directory to operate on.'
      output_bastion_info:
        required: false
        type: string
        description: 'Whether to ouptut Terraform Bastion info.'
        default: 'false'
      bastion_access:
        required: false
        type: string
        description: 'Whether to setup Bastion access'
      bastion_name:
        required: false
        type: string
        description: 'Name of Bastion instance.'
      bastion_zone:
        required: false
        type: string
        description: 'GCP Zone of Bastion instance.'
    outputs:
      bastion_name:
        description: 'Name of the Bastion instance.'
        value: ${{ jobs.terraform.outputs.bastion_name }}
      bastion_zone:
        description: 'GCP zone that the Bastion instance resides in.'
        value: ${{ jobs.terraform.outputs.bastion_zone }}


jobs:
  terraform:
    name: Terraform
    runs-on: ['ubuntu-latest']
    outputs:
      bastion_name: ${{ steps.tf-output.outputs.bastion_name }}
      bastion_zone: ${{ steps.tf-output.outputs.bastion_zone }}
    permissions:
      id-token: write
      contents: read

    env:
      TF_MODE: ${{ inputs.terraform_mode }}
      PROJECT_ID: ${{ inputs.project_id }}
      WORKLOAD_IDENTITY_PROVIDER: ${{ inputs.workload_identity_provider }}
      SERVICE_ACCOUNT: ${{ inputs.service_account }}
      TF_DIR: ${{ inputs.terraform_dir }}
      OUTPUT_BASTION_INFO: ${{ inputs.output_bastion_info }}
      BASTION_ACCESS: ${{ inputs.bastion_access }}
      BASTION_NAME: ${{ inputs.bastion_name }}
      BASTION_ZONE: ${{ inputs.bastion_zone }}

    steps:
    - name: Check out code
      uses: actions/checkout@a12a3943b4bdde767164f792f33f40b04645d846 # v3

    - name: Checkout submodules
      if: ${{ inputs.checkout_submodules == 'true' }}
      uses: actions/checkout@a12a3943b4bdde767164f792f33f40b04645d846 # v3
      with:
        repository: git@github.com:Cray-HPE/tekton-helm-charts.git
        ssh-key: $${{ secrets.HPE_TEKTON_DEPLOY }}

    - id: auth
      name: Authenticate to Google Cloud
      uses: google-github-actions/auth@8d125895b958610ec414ca4dae010257eaa814d3 # v0.6.0
      with:
        # Default is to generate a key file, which is automatically configured for use with gcloud.
        workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}
        service_account: ${{ env.SERVICE_ACCOUNT }}

    - uses: google-github-actions/setup-gcloud@877d4953d2c70a0ba7ef3290ae968eb24af233bb # v0.6.0
      with:
        project_id: ${{ env.PROJECT_ID }}

    - uses: hashicorp/setup-terraform@3d8debd658c92063839bc97da5c2427100420dec # 1.3.2
      with:
        terraform_wrapper: false

    - name: Terraform validate
      id: validate
      run: |
        pushd ${{ env.TF_DIR }}
        terraform init
        terraform validate
        popd

    - name: connect to bastion
      if: ${{ env.BASTION_ACCESS == 'true' }}
      run: |
        gcloud compute ssh --zone ${{ env.BASTION_ZONE }} ${{ env.BASTION_NAME}} --tunnel-through-iap --project ${{ env.PROJECT_ID }} -- -N -D 8118 &
        echo "HTTPS_PROXY=socks5://localhost:8118" >> $GITHUB_ENV
        sleep 30

    - name: terraform plan
      run: |
        pushd ${{ env.TF_DIR }}
        terraform plan
        popd

    - name: terraform apply
      if: ${{ env.TF_MODE == 'apply' }}
      run: |
        pushd ${{ env.TF_DIR }}
        terraform apply -auto-approve
        popd

    - name: terraform output
      id: tf-output
      if: ${{ env.OUTPUT_BASTION_INFO == 'true' }}
      run: |
        pushd ${{ env.TF_DIR }}
        terraform init
        echo "::set-output name=bastion_name::$(terraform output -raw bastion_name)"
        echo "::set-output name=bastion_zone::$(terraform output -raw bastion_zone)"
        popd



